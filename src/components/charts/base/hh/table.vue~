<template>
<div>
<hr>

<table class="ui celled table"  id="tabledata">
<caption id="tablecaption"></caption>

  <thead>
    <tr>
       <th>日期</th>
       <th v-for="tab in tabs">{{tab.name}}</th>
       
   </tr>
  </thead>
  <tbody>

    	
    <tr v-for="item in $store.state.module_hh.default.tableList.trtotal">
    <td>{{$store.state.module_hh.default.tableList.firstList[item-1].val}}</td>
      <td >{{$store.state.module_hh.default.tableList.spidList[item-1].count}}</td>
      <td >{{$store.state.module_hh.default.tableList.hhspList[item-1].count}} </td>
      <td >{{$store.state.module_hh.default.tableList.tzrxmList[item-1].count}} </td>
   
    </tr>
   

  </tbody>
  <tfoot>
    <tr><th colspan="10">
      <div class="ui right floated pagination menu">
        <a class="icon item" @click="prePage">
          <i class="left chevron icon"></i>
        </a>

        <a :class="item==currentPage?'item active':'item'" @click="page" v-for="item in pages" :data-val=item>{{item}}</a>
     

        <a class="icon item" @click="nextPage">
          <i class="right chevron icon"></i>
        </a>
	<div class="item">
  	         <div class="ui right labeled input">
      		 <input type="text" placeholder="输入跳转页码" id="pageGoto">
      		 <a class="ui label" @click="goto">跳转</a>
		</div>
        </div>
	
      </div>
    </th>
  </tr></tfoot>
</table>

</div>
</template>

<script  type="text/ecmascript-6">
var tabs=require('components/data/hh_tab.json')


export default{
      
       data(){

       	
	return{
		firstThName:'日期',
		tabs:tabs,
		pages:[1,2,3,4,5],
		currentPage:1
		
                
	}
       },
       computed:{
	 
       },
       mounted(){
		var that=this
		this.$store.dispatch('initTableOfHh').then(res=>{
			that.$store.dispatch('updateTableOfHh')
		})
		
       },
       created(){
		
       },
       methods:{
	
	page(env){
		
		var page=env.target.getAttribute('data-val')
		this.$data.currentPage=page
		this.$store.dispatch('updateTableOfHh',{page:page})
	},
	prePage(){
		var newPage=[]
		
		if(this.$data.currentPage<6){
			return;
		}
		this.$data.pages.forEach(function(val,key,array){
			
			newPage.push(val-5)
		});
		
		var page=newPage[0]
		
		this.$data.currentPage=page
		
		this.$store.dispatch('updateTableOfHh',{page:page})
		
		this.$data.pages=newPage
	},
	nextPage(){
		var newPage=[]
                this.$data.pages.forEach(function(val,key,array){
                        newPage.push(val+5)
                });
		
		var page=newPage[0]


                this.$data.currentPage=page

		this.$store.dispatch('updateTableOfHh',{page:page})

                this.$data.pages=newPage
	},
	goto(){
		var page=$("#pageGoto").val();
		
		var newPage=[];
		var startPage=page-page%5+1;
		var endPage=startPage+5;
		for(var i=startPage;i<endPage;i++){
			newPage.push(i)
		}
		this.$data.currentPage=page;
		this.$data.pages=newPage		

		this.$store.dispatch('updateTableOfHh',{page:page})
	}

       },
       components:{
	
       }
       
}
</script>
<style>
#tablecaption{
display:none
}
</style>
